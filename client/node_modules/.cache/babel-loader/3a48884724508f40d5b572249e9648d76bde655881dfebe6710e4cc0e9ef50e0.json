{"ast":null,"code":"var _jsxFileName = \"C:\\\\TPNoSQL\\\\mflix-app\\\\client\\\\src\\\\components\\\\CommentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommentForm({\n  movieId,\n  onCommentAdded\n}) {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [text, setText] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!text.trim()) {\n      setError(\"Comment text is required\");\n      return;\n    }\n    try {\n      setIsSubmitting(true);\n      setError(null);\n      const response = await fetch(`http://localhost:5001/api/movies/${movieId}/comments`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: name || 'Anonymous',\n          email,\n          text\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add comment');\n      }\n      const newComment = await response.json();\n\n      // Clear form\n      setName('');\n      setEmail('');\n      setText('');\n\n      // Notify parent component\n      if (onCommentAdded) {\n        onCommentAdded(newComment);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"comment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name (optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          placeholder: \"Anonymous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email (optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"text\",\n          children: \"Comment *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"text\",\n          value: text,\n          onChange: e => setText(e.target.value),\n          required: true,\n          rows: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting,\n        className: \"submit-button\",\n        children: isSubmitting ? 'Submitting...' : 'Add Comment'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentForm, \"p7tR/5mXiEcZkaK/JU6/2lUWM2c=\");\n_c = CommentForm;\nexport default CommentForm;\nvar _c;\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CommentForm","movieId","onCommentAdded","_s","name","setName","email","setEmail","text","setText","isSubmitting","setIsSubmitting","error","setError","handleSubmit","e","preventDefault","trim","response","fetch","method","headers","body","JSON","stringify","ok","Error","newComment","json","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","required","rows","disabled","_c","$RefreshReg$"],"sources":["C:/TPNoSQL/mflix-app/client/src/components/CommentForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction CommentForm({ movieId, onCommentAdded }) {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [text, setText] = useState('');\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!text.trim()) {\r\n      setError(\"Comment text is required\");\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setIsSubmitting(true);\r\n      setError(null);\r\n      \r\n      const response = await fetch(`http://localhost:5001/api/movies/${movieId}/comments`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          name: name || 'Anonymous',\r\n          email,\r\n          text,\r\n        }),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Failed to add comment');\r\n      }\r\n      \r\n      const newComment = await response.json();\r\n      \r\n      // Clear form\r\n      setName('');\r\n      setEmail('');\r\n      setText('');\r\n      \r\n      // Notify parent component\r\n      if (onCommentAdded) {\r\n        onCommentAdded(newComment);\r\n      }\r\n      \r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"comment-form-container\">\r\n      <h3>Add a Comment</h3>\r\n      \r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      \r\n      <form onSubmit={handleSubmit} className=\"comment-form\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Name (optional)</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            placeholder=\"Anonymous\"\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email (optional)</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"text\">Comment *</label>\r\n          <textarea\r\n            id=\"text\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            required\r\n            rows=\"4\"\r\n          />\r\n        </div>\r\n        \r\n        <button \r\n          type=\"submit\" \r\n          disabled={isSubmitting}\r\n          className=\"submit-button\"\r\n        >\r\n          {isSubmitting ? 'Submitting...' : 'Add Comment'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommentForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}