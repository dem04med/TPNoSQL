{"ast":null,"code":"var _jsxFileName = \"C:\\\\TPNoSQL\\\\mflix-app\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MovieList from './components/MovieList';\nimport MovieDetails from './components/MovieDetails';\nimport './index.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(0);\n  const [totalPages, setTotalPages] = useState(0);\n  const API_URL = 'http://localhost:5000/api';\n  useEffect(() => {\n    fetchMovies();\n  }, [page]);\n  const fetchMovies = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(`${API_URL}/movies?page=${page}&limit=20`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch movies');\n      }\n      const data = await response.json();\n      setMovies(data.movies);\n      setTotalPages(data.totalPages);\n      setLoading(false);\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n  const handleMovieSelect = async movieId => {\n    try {\n      setLoading(true);\n      const response = await fetch(`${API_URL}/movies/${movieId}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch movie details');\n      }\n      const data = await response.json();\n      setSelectedMovie(data.movie);\n      setComments(data.comments);\n      setLoading(false);\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n  const handleBackToList = () => {\n    setSelectedMovie(null);\n    setComments([]);\n  };\n  const handleNextPage = () => {\n    if (page < totalPages - 1) {\n      setPage(page + 1);\n    }\n  };\n  const handlePrevPage = () => {\n    if (page > 0) {\n      setPage(page - 1);\n    }\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"MFlix Movie Database\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: selectedMovie ? /*#__PURE__*/_jsxDEV(MovieDetails, {\n        movie: selectedMovie,\n        comments: comments,\n        onBack: handleBackToList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(MovieList, {\n          movies: movies,\n          onMovieSelect: handleMovieSelect,\n          loading: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePrevPage,\n            disabled: page === 0 || loading,\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Page \", page + 1, \" of \", totalPages]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNextPage,\n            disabled: page >= totalPages - 1 || loading,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nc1tVvKkeSHv2ROU9OEl12S7qLo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MovieList","MovieDetails","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","movies","setMovies","selectedMovie","setSelectedMovie","comments","setComments","loading","setLoading","error","setError","page","setPage","totalPages","setTotalPages","API_URL","fetchMovies","response","fetch","ok","Error","data","json","err","message","handleMovieSelect","movieId","movie","handleBackToList","handleNextPage","handlePrevPage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onBack","onMovieSelect","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/TPNoSQL/mflix-app/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MovieList from './components/MovieList';\r\nimport MovieDetails from './components/MovieDetails';\r\nimport './index.css';\r\n\r\nfunction App() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [selectedMovie, setSelectedMovie] = useState(null);\r\n  const [comments, setComments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [page, setPage] = useState(0);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n\r\n  const API_URL = 'http://localhost:5000/api';\r\n\r\n  useEffect(() => {\r\n    fetchMovies();\r\n  }, [page]);\r\n\r\n  const fetchMovies = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch(`${API_URL}/movies?page=${page}&limit=20`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch movies');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setMovies(data.movies);\r\n      setTotalPages(data.totalPages);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleMovieSelect = async (movieId) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch(`${API_URL}/movies/${movieId}`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch movie details');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setSelectedMovie(data.movie);\r\n      setComments(data.comments);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleBackToList = () => {\r\n    setSelectedMovie(null);\r\n    setComments([]);\r\n  };\r\n\r\n  const handleNextPage = () => {\r\n    if (page < totalPages - 1) {\r\n      setPage(page + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevPage = () => {\r\n    if (page > 0) {\r\n      setPage(page - 1);\r\n    }\r\n  };\r\n\r\n  if (error) {\r\n    return <div className=\"error-message\">Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <header>\r\n        <h1>MFlix Movie Database</h1>\r\n      </header>\r\n      \r\n      <main>\r\n        {selectedMovie ? (\r\n          <MovieDetails \r\n            movie={selectedMovie} \r\n            comments={comments} \r\n            onBack={handleBackToList} \r\n          />\r\n        ) : (\r\n          <>\r\n            <MovieList \r\n              movies={movies} \r\n              onMovieSelect={handleMovieSelect} \r\n              loading={loading} \r\n            />\r\n            \r\n            <div className=\"pagination\">\r\n              <button \r\n                onClick={handlePrevPage} \r\n                disabled={page === 0 || loading}\r\n              >\r\n                Previous\r\n              </button>\r\n              <span>Page {page + 1} of {totalPages}</span>\r\n              <button \r\n                onClick={handleNextPage} \r\n                disabled={page >= totalPages - 1 || loading}\r\n              >\r\n                Next\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}